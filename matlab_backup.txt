clear;
clc;

A = [1.42, 0.32, -0.42, 0.85;
    0.63, -0.43, 1.27, -0.58;
    0.84, -2.23, -0.52, 0.47;
    0.27, 1.37,  0.64, -1.27];

B = [1.32;
    -0.44;
    0.64;
    0.85];


disp('Исходные данные');
disp('Матрица A:');
disp(A);
disp('Вектор B:');
disp(B);



disp('Решение через обратную матрицу');

% Проверяем, что определитель не равен нулю, иначе решения нет или их бесконечно много
detA = det(A);
if abs(detA) < 1e-9 % Сравниваем с маленьким числом для точности
    disp('Определитель матрицы равен нулю. Решение невозможно.');
else
    % Вычисляем обратную матрицу
    A_inv = inv(A);
    
    % Находим решение X = A^-1 * B
    X1 = A_inv * B;
    
    disp('Обратная матрица A_inv:');
    disp(A_inv);
    disp('Результат X1 = A_inv * B:');
    disp(X1);
end


disp('Решение методом Крамера');

% Снова проверяем определитель
if abs(detA) < 1e-9
    disp('Определитель матрицы равен нулю. Метод Крамера неприменим.');
else
    n = length(B); % Определяем размерность системы
    X2 = zeros(n, 1); % Создаем пустой вектор-столбец для хранения решения
    
    % Вычисляем определители для каждой переменной
    for i = 1:n
        % Создаем временную матрицу Ai, заменяя i-й столбец на вектор B
        Ai = A;
        Ai(:, i) = B;
        
        % Находим решение для x_i по формуле Крамера
        X2(i) = det(Ai) / detA;
    end
    
    disp('Результат X2, полученный методом Крамера:');
    disp(X2);
end


% --- Шаг 4: "Правильный" способ в MATLAB ---
disp('оператор "\"');
X_matlab = A \ B;
disp('Результат X_matlab = A \ B:');
disp(X_matlab);

